openapi: 3.0.3
info:
  title: OpenAPI Transparency Exchange API specification 
  description: |-
    This is an OpenAPI specification of the Transparency Exchange API specification - Project Koala.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
paths:
  /bundle/list:
    get:
      tags:
        - bundle
      summary: List Bundles
      description: List all available bundles
      operationId: listBundles
      parameters:
        - name: visibility
          in: query
          description: Used to specify whether we list public or private components
          required: false
          schema:
            type: string
            enum:
              - PUBLICONLY
              - ALLAVAILABLE
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bundle'
  /bundle/{bundleId}/featureSets:
    get:
      tags:
        - bundle
      summary: List Feature Sets of Bundle
      description: List all present Feature Sets of Bundles
      operationId: listBundleFeatureSets
      parameters:
        - name: bundleId
          in: path
          required: true
          description: Bundle for which to list feature sets
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureSet'
  /bundle/{bundleId}/releases:
    get:
      tags:
        - bundle
      summary: List Releases of Bundle
      description: List all known Releases of Bundle across all Feature Sets
      operationId: listBundleReleases
      parameters:
        - name: bundleId
          in: path
          required: true
          description: Bundle for which to list releases
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
  /component/list:
    get:
      tags:
        - component
      summary: List Components
      description: List all available components
      operationId: listComponents
      parameters:
        - name: visibility
          in: query
          description: Used to specify whether we list public or private components
          required: false
          schema:
            type: string
            enum:
              - PUBLICONLY
              - ALLAVAILABLE
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component'          
  /component/{componentId}/branches:
    get:
      tags:
        - component
      summary: List Branches of Component
      description: List all present Branches of Component
      operationId: listComponentBranches
      parameters:
        - name: componentId
          in: path
          required: true
          description: Component for which to list branches
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
  /component/{componentId}/releases:
    get:
      tags:
        - component
      summary: List Releases of Component
      description: List all known Releases of Component across all Branches
      operationId: listComponentReleases
      parameters:
        - name: componentId
          in: path
          required: true
          description: Component for which to list releases
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
  /branch/{branchId}/releases:
    get:
      tags:
        - branch
      summary: List Releases of Branch
      description: List all known Releases of Branch
      operationId: listBranchReleases
      parameters:
        - name: branchId
          in: path
          required: true
          description: Branch for which to list releases
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
  /featureSet/{featureSetId}/releases:
    get:
      tags:
        - featureSet
      summary: List Releases of Feature Set
      description: List all known Releases of Feature Set
      operationId: listFeatureSetReleases
      parameters:
        - name: featureSetId
          in: path
          required: true
          description: Feature set for which to list releases
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
  /release/{releaseId}:
    get:
      tags:
        - release
      summary: Show release details
      description: Show details of specific release
      operationId: getRelease
      parameters:
        - name: releaseId
          in: path
          required: true
          description: Release id to show details
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
components:
  schemas:
    Component:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 5d0f59cd-5787-4e42-8e22-a2343cf19dd8
        name:
          type: string
          example: Awesome Component
        lifecycle:
          type: array
          items:
            $ref: '#/components/schemas/Lifecycle'
    Bundle:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 5d0f59cd-5787-4e42-8e22-a2343cf19dd8
        name:
          type: string
          example: Awesome Bundle
        lifecycle:
          type: array
          items:
            $ref: '#/components/schemas/Lifecycle'
    Branch:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 5d0f59cd-5787-4e42-8e22-a2343cf19dd8
        name:
          type: string
          example: Awesome Branch
        lifecycle:
          type: array
          items:
            $ref: '#/components/schemas/Lifecycle'
    FeatureSet:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 5d0f59cd-5787-4e42-8e22-a2343cf19dd8
        name:
          type: string
          example: Awesome Branch
        lifecycle:
          type: array
          items:
            $ref: '#/components/schemas/Lifecycle'
    Release:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 5d0f59cd-5787-4e42-8e22-a2343cf19dd8
        version:
          type: string
          example: 0.1.0
        created:
          type: string
          format: date-time
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/Artifact'
        lifecycle:
          type: array
          items:
            $ref: '#/components/schemas/Lifecycle'
        upstreamComponents:
          description: components that make up this release, must be populated for bundle releases
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - COMPONENT
                  - BUNDLE
              identifier:
                type: string
                format: uuid
                example: 5d0f59cd-5787-4e42-8e22-a2343cf19dd8
        status:
          type: string
          enum:
            - DRAFT
            - REJECTED
            - COMPLETED
    Artifact:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 5d0f59cd-5787-4e42-8e22-a2343cf19dd8
        identifier:
          type: string
          example: registry.relizahub.com/library/rebom-backend
        boms:
          type: array
          items:
            $ref: '#/components/schemas/Bom'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    Lifecycle:
      type: object
      properties:
        event:
          type: string
          enum:
            - FIRST_MENTION
            - ALPHA_TESTING
            - BETA_TESTING
            - RELEASE_CANDIDATE
            - GENERAL_AVAILABILITY
            - END_OF_DEVELOPMENT
            - END_OF_SALES
            - END_OF_SUPPORT
            - END_OF_LIFE
        date:
          type: string
          format: date-time
    Bom:
      type: object
      properties:
        identifier:
          type: string
          example: 5d0f59cd-5787-4e42-8e22-a2343cf19dd8
        version:
          type: string
          example: 1
        downloadLinks:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        inventoryTypes:
          type: array
          items:
            enum:
              - SOFTWARE
              - HARDWARE
              - CRYPTOGRAPHY
              - SERVICE
              - VULNERABILITY
        bomFormat:
          type: string
          example: CycloneDX
        date:
          type: string
          format: date-time
    Attachment:
      type: object
      properties:
        type:
          type: string
          enum:
            - ATTESTATION
            - VDR
            - VEX
        identifier:
          type: string
          example: 5d0f59cd-5787-4e42-8e22-a2343cf19dd8
        version:
          type: string
          example: 1
        downloadLinks:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        date:
          type: string
          format: date-time
    Link:
      type: object
      properties:
        uri:
          type: string
          example: https://mysite.com/mysbom.json
        content:
          type: string
          enum:
            - OCI
            - PLAIN_JSON
            - OCTET_STREAM
            - PLAIN_XML